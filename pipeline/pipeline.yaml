---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-sa
  namespace: default
secrets:
  - name: github-credentials
  - name: gcr-credentials
  - name: argocd-env-secret

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pipeline-cr
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - services/finalizers
      - endpoints
      - namespaces
    verbs:
      - get
      - list

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: pipeline-cr-binding
subjects:
  - kind: ServiceAccount
    name: pipeline-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: pipeline-cr
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: webapp-sample-pipeline
spec:
  workspaces:
    - name: build-data
    - name: deploy-data
    - name: test-space
  params:
    - name: git-url
      description: The URL of the Code Repository
      type: string
    - name: git-revision
      description: The Revision of the Code Repository
      type: string
    - name: image-name
      description: The output Image Name
      type: string
    - name: deploy-branch
      description: The branch of the deployer to work on
      default: main
    - name: test-environment
      description: The environment to deploy and run tests against
      default: webapp-sample-dev
    - name: staging-environment
      description: The environment to deploy when the pipeline has completed
      default: webapp-sample-staging
  results:
    - name: image-digest
      description: The digest of the created image
      value: $(tasks.build-image-and-push.results.IMAGE_DIGEST)
    - name: webapp-version
      description: The version number of the webapp-sample
      value: $(tasks.get-code-version.results.webapp-version)
  tasks:
    - name: fetch-app-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: build-data
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)

    - name: get-code-version
      taskRef:
        name: get-version
      runAfter:
        - fetch-app-repo
      workspaces:
        - name: source
          workspace: build-data

    - name: test-and-package-app
      taskRef:
        name: maven
      runAfter:
        - get-code-version
      workspaces:
        - name: source
          workspace: build-data
        - name: maven-settings
          workspace: build-data
      params:
        - name: GOALS
          value:
            - "clean"
            - "test"
            - "package"
            - "-Drevision=$(tasks.get-code-version.results.build-version)"

    - name: build-image-and-push
      taskRef:
        name: buildah
      runAfter:
        - test-and-package-app
      workspaces:
        - name: source
          workspace: build-data
      params:
        - name: IMAGE
          value: $(params.image-name):$(tasks.get-code-version.results.app-version)

    - name: get-deploy-repo
      taskRef:
        name: get-deploy-repo
      runAfter:
        - build-image-and-push
      workspaces:
        - name: source
          workspace: build-data

    - name: fetch-deploy-repo
      taskRef:
        name: git-clone
      runAfter:
        - get-deploy-repo
      workspaces:
        - name: output
          workspace: deploy-data
      params:
        - name: url
          value: $(tasks.get-deploy-repo.results.deploy-repo-url)
        - name: revision
          value: main

    - name: update-deploy-image
      taskRef:
        name: update-image
      runAfter:
        - fetch-deploy-repo
      workspaces:
        - name: source
          workspace: deploy-data
      params:
        - name: image-name
          value: $(params.image-name)
        - name: image-digest
          value: $(tasks.build-image-and-push.results.IMAGE_DIGEST)
        - name: deploy-branch
          value: main

    - name: sync-dev-application
      taskRef:
        name: argocd-task-sync-and-wait
      runAfter:
        - update-deploy-image
      params:
        - name: application-name
          value: $(params.test-environment)
        - name: argocd-version
          value: v1.8.3
        - name: flags
          value: --insecure --grpc-web # Self-signed Cert

    - name: dev-integration-test
      taskRef:
        name: integration-test
      runAfter:
        - sync-dev-application
      workspaces:
        - name: test-space
          workspace: test-space
      params:
        - name: test-environment
          value: $(params.test-environment)
        - name: build-version
          value: $(tasks.get-code-version.results.build-version)

    - name: tag-app-release
      taskRef:
        name: tag-release
      runAfter:
        - dev-integration-test
      workspaces:
        - name: source
          workspace: build-data
      params:
        - name: app-version
          value: $(tasks.get-code-version.results.app-version)

    - name: tag-deploy-release
      taskRef:
        name: tag-release
      runAfter:
        - dev-integration-test
      workspaces:
        - name: source
          workspace: deploy-data
      params:
        - name: app-version
          value: $(tasks.get-code-version.results.app-version)

    - name: sync-staging-application
      taskRef:
        name: argocd-task-sync-and-wait
      runAfter:
        - tag-app-release
        - tag-deploy-release
      params:
        - name: application-name
          value: $(params.staging-environment)
        - name: argocd-version
          value: v1.8.3
        - name: flags
          value: --insecure --grpc-web # Self-signed Cert
        - name: revision
          value: v$(tasks.get-code-version.results.app-version)
